<chapter xml:id="hbintro-66644">
<title>Introduction to Shutting Down and Booting a System</title>
<para>The Solaris Operating System (Solaris OS) is designed to run continuously so that electronic mail
and network resources are available to users. This chapter provides guidelines for shutting down and booting a system.</para>
<itemizedlist>
	<para>This is a list of the information in this chapter:</para>
	<listitem><para><xref linkend="etmjx" /></para></listitem>
	<listitem><para><xref linkend="hbrunlevels-27" /></para></listitem>
	<listitem><para><xref linkend="hboverview-21323" /></para></listitem>
	<listitem><para><xref linkend="hboverview-40266" /></para></listitem>
	<listitem><para><xref linkend="hboverview-19075" /></para></listitem>
	<listitem><para><xref linkend="hboverview-70350" /></para></listitem>
	<listitem><para><xref linkend="hboverview-24993" /></para></listitem>
</itemizedlist>
<para>For an overview of all of the boot features and methods that are available
in the Solaris release, see <xref linkend="hboverview-25463" /></para>
<para>For instructions on booting a Solaris system, see <xref linkend="hbsparcboot-79782" />.</para>
<sect1 xml:id="etmjx">
<title>What's New in Shutting Down and Booting a System</title>
<para>This section describes new boot features in the Solaris release.</para>
<sect2 xml:id="ghzdv" arch="x86">
<title>iSCSI Boot</title>
<indexterm><primary>iSCSI boot</primary><secondary>on the x86 platform</secondary></indexterm>
<indexterm><primary>x86 boot features</primary><secondary>iSCSI boot</secondary></indexterm>
<para><emphasis role="strong">Solaris Express Community Edition, build 104:</emphasis> The
iSCSI Boot feature enables you to initialize an operating system over the
network from a remote location, such as a storage disk array. This version
of iSCSI Boot supports booting from x86 based systems. iSCSI Boot is typically
loaded onto an initiator or a diskless client, while the hard disk resides
on a SCSI target that is attached to the network. Because the feature uses
a standard Ethernet-based infrastructure, data, storage, and networking traffic
can be consolidated on a standard network.  More information about iSCSI Boot
can be found at <link xl:href="http://wikis.sun.com/display/OpenSolarisInfo/iSCSI+Boot">http://wikis.sun.com/display/OpenSolarisInfo/iSCSI+Boot</link>.</para>
</sect2><sect2 xml:id="ghseq"><title>Fast Reboot on the x86 Platform</title><indexterm><primary>x86: fast reboot</primary>
</indexterm><para><emphasis role="strong">Solaris Express Community Edition, build 100,
and the OpenSolaris 2008.11 release:</emphasis> The Fast Reboot feature enables
you to reboot an x86 based system, bypassing the firmware and boot loader
processes.  Fast Reboot implements an in-kernel boot loader that loads the
kernel into memory and then switches to that kernel, so that the reboot process
occurs within seconds. This feature is implemented on both 32-bit and 64-bit
kernels.</para>
<para>For more information about this feature, see <xref linkend="ghsbc" />.</para>
</sect2>
<sect2 xml:id="ggjfc">
<title>ZFS Boot Support</title>
<para><emphasis role="strong">Solaris Express Community Edition,
builds 88 and 90:</emphasis> This release includes  <trademark>ZFS </trademark> installation and
boot support. Systems can now be installed and booted from a ZFS root file
system. This implementation applies to both SPARC and x86 based systems. Booting,
system operations, and installation procedures have been modified to support
this change.</para><para>For more information, see <xref linkend="ggqhp" />.</para>
</sect2><sect2 xml:id="ggvnn" arch="x86"><title>New <command>findroot</command> Command</title><para><emphasis role="strong">Solaris Express Community Edition,
build 88:</emphasis> All Solaris installation methods, including Solaris
Live Upgrade, now use the <command>findroot</command> command for specifying
which disk slice on an x86 based system to boot. This implementation supports
booting systems with ZFS roots, as well as UFS roots. Previously, the <command>root</command> command, <command>root</command> (<literal>hd0.0.a</literal>),
was used to explicitly specify which disk slice to boot. This information
is located in the <filename>menu.lst</filename> file that is used by GRUB.</para><para>The most common form of the GRUB <filename>menu.lst</filename> entry
is now:</para><screen>findroot (rootfs0,0,a)
kernel$ /platform/i86pc/kernel/$ISADIR/unix -B $ZFS-BOOTFS
module$ /platform/i86pc/$ISADIR/boot_archive</screen><para>For more information, see <xref linkend="ggumt" />.</para>
</sect2><sect2 xml:id="ggqtf"><title>Support for Specifying Platform by Using <command>bootadm</command> Command</title><para><emphasis role="strong">Solaris Express Community Edition,
build 87:</emphasis> A new <option>p</option> option has been added to
the <command>bootadm</command> command.</para><para>This option enables you to specify the platform or machine hardware
class of a client system in situations where the client platform differs from
the server platform, for example when administering diskless clients.</para>
<note><para>The <option>p</option> option must be used with the <option>R</option> option.</para></note>
<screen># <userinput>bootadm -p <replaceable>platform</replaceable> -R [<replaceable>altroot</replaceable>]</userinput></screen>
<itemizedlist>
	<para>The specified platform must be one of the following:</para>
	<listitem><para><literal>i86pc</literal></para></listitem>
	<listitem><para><literal>sun4u</literal></para></listitem>
	<listitem><para><literal>sun4v</literal></para></listitem>
</itemizedlist>
<para>For more information, see the <citerefentry><refentrytitle>bootadm</refentrytitle><manvolnum>1M</manvolnum></citerefentry> manual page.</para>
</sect2><sect2 xml:id="ggean"><title>Solaris SPARC Bootstrap Process Redesigned</title><para><emphasis role="strong">Solaris Express Community Edition,
build 80:</emphasis> The Solaris SPARC bootstrap process has been redesigned
to increase commonality with the Solaris x86 boot architecture.</para><para>Other enhancements include an improved boot architecture that supports
booting a system from additional file system types, for example a ZFS file
system or a single miniroot for installation, as well as booting from DVD,
NFS, or HTTP. These enhancements increase flexibility and reduce maintenance
requirements on SPARC based systems.</para><para>As part of this redesign, the Solaris boot archives and the <command>bootadm</command> command, previously only available on the Solaris x86 based platform,
are now an integral part of the Solaris SPARC boot architecture.</para><para>The primary difference between the SPARC and x86 boot architectures
is how the boot device and file are selected at boot time. The SPARC based
platform continues to use the <trademark>OpenBoot</trademark> PROM (OBP) as
the primary administrative interface, with boot options selected by using
OBP commands. On x86 based systems, these options are selected through the
BIOS and the GRand Unified Bootloader (GRUB) menu.</para><note><para> Although the implementation of the Solaris SPARC boot  has changed,
no administrative procedures for booting a SPARC based system have been impacted.
Boot tasks that are performed by the system administrator remain the same
as they were prior to the boot architecture redesign.</para>
</note>
<para>For more information, see the <citerefentry><refentrytitle>boot</refentrytitle><manvolnum>1M</manvolnum></citerefentry> and <citerefentry><refentrytitle>bootadm</refentrytitle><manvolnum>1M</manvolnum></citerefentry> manual pages.</para>
<para>For more information in this document, see <xref linkend="ggefi" />.</para>
</sect2><sect2 xml:id="gfrft" arch="x86"><title>Support for Booting the Solaris OS as a Virtualized
Control Domain</title><para><emphasis role="strong">Solaris Express Community Edition,
build 75:</emphasis> In this release, the GRUB boot loader is capable of
booting a Solaris release that runs with hypervisor technology. The hypervisor
can securely execute multiple virtual machines simultaneously, each running
its own operating system, on a single physical system. You can decide at boot
time whether to run the Solaris OS as a virtualized domain0, also called a
dom0, or as a stand-alone operating system.</para><para>You can run the Solaris OS as a virtualized dom0. Whether to run the
Solaris OS as a virtualized dom0 or as a stand-alone operating system is a
decision you can make at boot time. To run the Solaris OS as a virtualized
dom0, there must first be an entry in the <filename>menu.lst</filename> file
that specifies the hypervisor. The entry can be the default boot entry, or
it can be an option that you select manually at boot time. Note that when
you upgrade your system to a Solaris release that includes this capability,
the <command>bootadm</command> command automatically adds a menu entry for
the hypervisor to the <filename>menu.lst</filename> file.</para><para>The <command>bootadm</command> command installs a default boot entry
in the <filename>menu.lst</filename> file that is similar to the following:</para><screen remap="wide">kernel$ /boot/$ISADIR/xen.gz
module$ /platform/i86xpv/kernel/$ISADIR/unix /platform/i86xpv/kernel/$ISADIR/unix -B $ZFS-BOOTFS 
module$ /platform/i86pc/$ISADIR/boot_archive</screen><note><para>The format for entries that are used in the <filename>menu.lst</filename> file
for booting the Solaris OS as a control domain differs slightly from the format
that is used for other <filename>menu.lst</filename> entries. The <filename>kernel$</filename> line must identify the hypervisor binary to use and includes any
options that are accepted by the hypervisor. The first <filename>module$</filename> line
in the file identifies the Solaris kernel to use, for example <literal>unix</literal>,
and include any options the <literal>unix</literal> kernel accepts. Due to
an implementation detail that exists in this version of GRUB, the specified <literal>unix</literal> kernel must be named twice on the first <filename>module$</filename> line.
The second <filename>module$</filename> line identifies the boot archive to
use.</para>
</note>
<para>For more information, see <xref linkend="gftyx" />.</para>
<para>For more information about administering Solaris systems that support
the hypervisor, see <link xl:href="http://www.opensolaris.org/os/community/xen/docs/">http://www.opensolaris.org/os/community/xen/docs/</link> and <olink targetdoc="sysadrm" remap="external"><citetitle remap="book">System Administration Guide:  Virtualization Using the Solaris Operating System</citetitle></olink></para>
</sect2>
<sect2 xml:id="getrk" arch="x86">
<title>GRUB Support for Directly Loading and Booting the <literal>unix</literal> Kernel</title>
<indexterm><primary>extended GRUB support</primary></indexterm>
<indexterm><primary>GRUB support</primary><secondary>for directly <filename>loading</filename> and booting the <filename>unix</filename> kernel</secondary></indexterm>
<indexterm><primary>directly loading and booting the <literal>unix</literal> kernel</primary><secondary>GRUB support</secondary></indexterm>
<para><emphasis role="strong">Solaris Express Community Edition, build 57:</emphasis> This release includes changes to the GRUB based boot
environment to enable the boot loader to directly load and boot the <literal>unix</literal> kernel.</para>
<note><para>The GRUB <literal>multiboot</literal> module is no longer used.</para>
</note><para>This implementation integrates the previous multiboot functionality
directly into the platform-specific <literal>unix</literal> kernel module.
These changes reduce the time, as well as memory requirements, that are needed
to boot the Solaris OS on x86 based systems.</para><para>Two new keywords, <literal>kernel$</literal> and <literal>module$</literal>,
have been added to GRUB to assist in creating <filename>menu.lst</filename> entries
that work with either 32-bit or 64-bit systems. In addition, the <command>bootadm</command> command that manages the <filename>menu.lst</filename> file has
been modified to create file entries for the platform-specific <filename>unix</filename> module
that is loaded by GRUB. During an upgrade, the <command>bootadm</command> command
converts any existing multiboot <filename>menu.lst</filename> entries to <filename>unix</filename> entries.</para><para>The <literal>kernel$</literal> and <literal>module$</literal> keywords
are identical to the <filename>kernel</filename> and <filename>module</filename> commands
that are used in the GRUB multiboot implementation, with the addition of the <literal>$ISADIR</literal> keyword. This keyword provides the capability to expand
to amd64 on 64-bit capable hardware. If the x86 based system is not 64-bit
capable, the <literal>$ISADIR</literal> keyword is a null value (<literal>""</literal>).
In this case, the system boots the 32-bit kernel.</para><note><para>These changes do not prevent you from booting a newer Solaris
kernel with an older implementation of GRUB. Nor do the changes prevent you
from booting an older Solaris kernel with a newer implementation of GRUB.</para>
</note><para>For information about booting an x86 based system with GRUB, see <xref linkend="fvbsc" />.</para>
</sect2><sect2 xml:id="gehpw" arch="x86"><title>Support for Using Power Button to Initiate
System Shutdown</title><para>Pressing and releasing the power button on x86 based systems initiates
a clean system shutdown and turns the system off. This functionality is equivalent
to using the <command>init 5</command> command to shut down a system.  On
some x86 based systems, the BIOS configuration might prevent the power button
from initiating shutdown. To enable use of the power button to perform a clean
system shutdown, reconfigure the BIOS.</para><note><para>On certain x86 based systems that were manufactured before 1999
and are running an older Solaris release, pressing the power button immediately
turns off system power without safely shutting down the system. This same
behavior occurs when pressing the power button on systems that are running
with ACPI support that is disabled through the use of <literal>acpi-user-options</literal>.</para><para>For more information about <literal>acpi-user-options</literal>,
see the <citerefentry><refentrytitle>eeprom</refentrytitle><manvolnum>1M</manvolnum></citerefentry> man
page.</para>
</note>
</sect2>
</sect1><sect1 xml:id="hbrunlevels-27"><title>Where to Find Shut Down and Boot Tasks</title><para>Use these references to find step-by-step instructions for shutting
down and booting a system.</para><informaltable frame="topbot"><tgroup cols="2" colsep="0" rowsep="0"><colspec colname="colspec0" colwidth="50*"/><colspec colname="colspec1" colwidth="50*"/><thead><row rowsep="1"><entry><para>Shut Down and Boot Task</para>
</entry><entry><para>For More Information</para>
</entry>
</row>
</thead><tbody><row><entry><para>Shut down a SPARC based system or an x86 based system</para>
</entry><entry><para><xref linkend="hbsyshalt-84412" /></para>
</entry>
</row><row><entry><para>Modify boot behavior</para>
</entry><entry><para><xref linkend="grubtasks-1" /></para>
</entry>
</row><row><entry><para>Boot a SPARC based system or an x86 based system</para>
</entry><entry><para><xref linkend="hbsparcboot-79782" /></para>
</entry>
</row><row><entry><para>Manage the Solaris boot archives</para>
</entry><entry><para><xref linkend="archive-123" /></para>
</entry>
</row><row><entry><para>Troubleshoot boot behavior on a SPARC or an x86 based system</para>
</entry><entry><para><xref linkend="ggkti" /></para>
</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</sect1><sect1 xml:id="hboverview-21323"><title>Shut Down and Boot Terminology</title><para>This section describes the terminology that is used in shutting down
and booting a system.</para><variablelist><varlistentry><term><emphasis role="strong">Run levels and init states</emphasis></term><listitem><para>A <emphasis>run level</emphasis> is a letter or digit that
represents a system state in which a particular set of system services are
available. The system is always running in one of a set of well-defined run
levels. Run levels are also referred to as <emphasis>init states</emphasis> because
the <command>init</command> process maintains the run level. System administrators
use the <command>init</command> command or the <command>svcadm</command> command
to initiate a run-level transition. This book refers to init states as run
levels.</para>
</listitem>
</varlistentry><varlistentry><term><emphasis role="strong">Boot options</emphasis></term><listitem><para>A <emphasis>boot option</emphasis> describes how a system
is booted.</para><itemizedlist><para>Different boot options include the following:</para><listitem><para><emphasis role="strong">Interactive boot</emphasis> &ndash;
You are prompted to provide information about how the system is booted, such
as the kernel and device path name.</para>
</listitem><listitem><para><emphasis role="strong">Reconfiguration boot</emphasis> &ndash; The system is shutdown
and rebooted to add new devices, if the devices are not hot-pluggable.The system is reconfigured to support newly added
hardware or new pseudo devices.</para>
</listitem><listitem><para><emphasis role="strong">Recovery boot</emphasis> &ndash; The
system is hung or an invalid entry is prohibiting the system from booting
successfully or from allowing users to log in.</para>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist><para>For terminology that is specific to GRUB based booting, see <xref linkend="grubterm" />.</para>
</sect1><sect1 xml:id="hboverview-40266"><title>Guidelines for Shutting Down a System</title><indexterm><primary>shutting down</primary><secondary>a system, guidelines</secondary>
</indexterm><itemizedlist><para>Keep the following in mind when you shut down a system:</para><listitem><para>Use the <command>init</command> and <command>shutdown</command> commands
to shut down a system. Both commands perform a clean system shutdown, which
means that all system processes and services are terminated normally.</para><note arch="x86"><para>For x86 based systems that are running at least the
Solaris 10 6/06 release, you can initiate a clean system shutdown by pressing
and releasing the power button. Shutting down an x86 based system in this
manner is equivalent to using the <command>init 5</command> command to shut
down a system.  On some x86 based systems, the BIOS configuration might prevent
the power button from initiating a system shutdown. To use the power button,
reconfigure the BIOS.</para>
</note>
</listitem><listitem><para><indexterm xml:id="hboverview-ix932"><primary><command>shutdown</command> command</primary><secondary>shutting down a server</secondary></indexterm>Use the <command>shutdown</command> command to shut down a server. Logged-in users and systems
that mount resources from the server are notified before the server is shut
down. Additional notification of system shutdowns by electronic mail is also
recommended so that users can prepare for system downtime. </para>
</listitem><listitem><para>You need superuser privileges to use the <command>shutdown</command> or <command>init</command> command to shut down a system. </para>
</listitem><listitem><para>Both <command>shutdown</command> and <command>init</command> commands
take a run level as an argument. </para><itemizedlist><para>The three most common run levels are as follows:</para><listitem><para><emphasis role="strong">Run level 3</emphasis> &ndash; All
system resources are available and users can log in. By default, booting a
system brings it to run level 3, which is used for normal day-to-day operations.
This run level is also known as multiuser level with NFS resources shared.</para>
</listitem><listitem><para><emphasis role="strong">Run level 6</emphasis> &ndash; Stops
the operating system and reboots to the state that is defined by the <literal>initdefault</literal> entry in the <filename>/etc/inittab</filename> file.</para>
</listitem><listitem><para><emphasis role="strong">Run level 0</emphasis> &ndash; The
operating system is shut down, and it is safe to turn off power. You need
to bring a system to run level 0 whenever you move a system, or add or remove
hardware.</para>
</listitem>
</itemizedlist><para>Run levels are fully described in <xref linkend="hbrunlevels-25516" />.</para>
</listitem>
</itemizedlist>
</sect1><sect1 xml:id="hboverview-19075"><title>Guidelines for Booting a System</title><indexterm><primary>booting</primary><secondary>a system, guidelines</secondary>
</indexterm><itemizedlist><para>Keep the following in mind when you boot a system:</para><listitem><para>After a SPARC based system is shut down, it is booted by using
the <command>boot</command> command at the PROM level.</para>
</listitem><listitem><para>After an x86 based system is shut down, it is booted by selecting
an OS instance in the GRUB menu.</para>
</listitem><listitem><para>In the Solaris 9 release and some Solaris 10 releases, after
an x86 based system is shut down, it is booted by using the <command>boot</command> command
at the Primary Boot Subsystem menu.</para>
</listitem><listitem><para>A system can be rebooted by turning the power off and then
back on.</para><caution><para>This method is not considered a clean shutdown, unless you
have an x86 based system that is running a Solaris release that supports this
shutdown method. See <xref linkend="gehpw" />. Use this shutdown method only as an alternative
in emergency situations. Because system services and processes are terminated
abruptly, file system damage is likely to occur. The work required to repair
this type of damage could be substantial and might require the restoration
of various user and system files from backup copies.</para>
</caution>
</listitem><listitem><para>SPARC and x86 based systems use different hardware components
for booting. These differences are described in <xref linkend="hbsysboot-76719" />.</para>
</listitem>
</itemizedlist>
</sect1><sect1 xml:id="hboverview-70350"><title>When to Shut Down a System</title><para>The following table lists system administration tasks and the type of
shutdown that is needed to initiate the task.</para><table frame="topbot" pgwide="1" xml:id="hboverview-12489"><title>Shutting Down
a System</title><tgroup cols="3" colsep="0" rowsep="0"><colspec colname="column1" colwidth="30*"/><colspec colname="column2" colwidth="30*"/><colspec colname="column3" colwidth="40*"/><thead><row rowsep="1"><entry><para>Reason for System Shutdown</para>
</entry><entry><para>Appropriate Run Level</para>
</entry><entry><para>For More Information</para>
</entry>
</row>
</thead><tbody><row><entry><para>To turn off system power due to anticipated power outage</para>
</entry><entry><para>Run level 0, where it is safe to turn off power</para>
</entry><entry><para><xref linkend="hbsyshalt-84412" /></para>
</entry>
</row><row><entry><para>To change kernel parameters in the <filename>/etc/system</filename> file</para>
</entry><entry><para>Run level 6 (reboot the system)</para>
</entry><entry><para><xref linkend="hbsyshalt-84412" /></para>
</entry>
</row><row><entry><para>To perform file system maintenance, such as backing up or restoring
system data</para>
</entry><entry><para>Run level S (single-user level)</para>
</entry><entry><para><xref linkend="hbsyshalt-84412" /></para>
</entry>
</row><row><entry><para>To repair a system configuration file such as <filename>/etc/system</filename></para>
</entry><entry><para>See <xref linkend="hboverview-24993" /></para>
</entry><entry><para>N/A</para>
</entry>
</row><row><entry><para>To add or remove hardware from the system</para>
</entry><entry><para>Reconfiguration boot (also to turn off power when
adding or removing hardware)</para><para>Reconfiguration boot (shut down and
turn off power when adding or removing devices, if the devices are not hot-pluggable) </para>
</entry><entry><para><olink targetdoc="sagdfs" targetptr="devconfig-6" remap="external"><citetitle remap="section">Adding a Peripheral Device to a System</citetitle> in <citetitle remap="book">System Administration Guide: Devices and File Systems</citetitle></olink></para>
</entry>
</row><row><entry><para>To repair an important system file that is causing system boot failure</para>
</entry><entry><para>See <xref linkend="hboverview-24993" /></para>
</entry><entry><para>N/A</para>
</entry>
</row><row><entry><para>To boot the kernel debugger (<command>kmdb</command>) to track down
a system problem</para>
</entry><entry><para>Run level 0, if possible</para>
</entry><entry><para><xref linkend="hbsyshalt-84412" /></para>
</entry>
</row><row><entry><para>To recover from a hung system and force a crash dump</para>
</entry><entry><para>See <xref linkend="hboverview-24993" /></para>
</entry><entry><para>N/A</para>
</entry>
</row><row><entry><para>Reboot the system by using the kernel debugger (<command>kmdb</command>),
if the debugger can't be loaded at runtime.</para>
</entry><entry><para>Run level 6 (reboot the system)</para>
</entry><entry><para><emphasis role="strong">For SPARC based systems:</emphasis></para><para><xref linkend="euayz" /></para><para><emphasis role="strong">For x86 based systems:</emphasis></para><para>,<xref linkend="fvzpl" /> </para>
</entry>
</row>
</tbody>
</tgroup>
</table><para>For examples of shutting down a server or a stand-alone system, see <xref linkend="hbsyshalt-84412" />.</para>
</sect1><sect1 xml:id="hboverview-24993"><title>When to Boot a System</title><para>The following table lists system administration tasks and the corresponding
boot option that is used to complete the task.</para><table frame="topbot" pgwide="1" xml:id="hboverview-tbl-34"><title>Booting a System</title><tgroup cols="4" colsep="0" rowsep="0"><colspec colname="colspec2" colwidth="25*"/><colspec colname="colspec3" colwidth="25*"/><colspec colname="colspec4" colwidth="25*"/><colspec colname="colspec5" colwidth="25*"/><thead><row rowsep="1"><entry><para>Reason for System Reboot</para>
</entry><entry><para>Appropriate Boot Option</para>
</entry><entry><para>Information for SPARC Based Systems</para>
</entry><entry><para>Information for x86 Based Systems</para>
</entry>
</row>
</thead><tbody><row><entry><para>Turn off system power due to anticipated power outage.</para>
</entry><entry><para>Turn system power back on</para>
</entry><entry><para><xref linkend="hbsyshalt-84412" /></para>
</entry><entry><para><xref linkend="hbsyshalt-84412" /></para>
</entry>
</row><row><entry><para>Change kernel parameters in the <filename>/etc/system</filename> file.</para>
</entry><entry><para>Reboot the system to run level 3 (multiuser level with NFS resources
shared)</para>
</entry><entry><para><xref linkend="hbsparcboot-36744" /></para>
</entry><entry><para><xref linkend="fvzun" /></para>
</entry>
</row><row><entry><para>Perform file system maintenance, such as backing up or restoring system
data.</para>
</entry><entry><para>Press Control-D from run level S to bring the system back to run level
3</para>
</entry><entry><para><xref linkend="hbsparcboot-83723" /></para>
</entry><entry><para><xref linkend="fvzqr" /></para>
</entry>
</row><row><entry><para>Repair a system configuration file such as <filename>/etc/system</filename>.</para>
</entry><entry><para>Interactive boot</para>
</entry><entry><para><xref linkend="hbsparcboot-66353" /></para>
</entry><entry><para><xref linkend="fvzmg" /></para>
</entry>
</row><row><entry><para>Add or remove hardware from the system.</para>
</entry><entry><para>Reconfiguration boot (turn on system power after adding or removing devices,
if devices are not hot-pluggable) </para><para>Reconfiguration boot (also to turn on system power after adding or removing
hardware)</para>
</entry><entry><para><olink targetdoc="sagdfs" targetptr="diskssadd-53" remap="external"><citetitle remap="section">Adding a System Disk or a Secondary Disk (Task Map)</citetitle> in <citetitle remap="book">System Administration Guide: Devices and File Systems</citetitle></olink></para>
</entry><entry><para><olink targetdoc="sagdfs" targetptr="disksxadd-73" remap="external"><citetitle remap="section">Adding a System Disk or a Secondary Disk (Task Map)</citetitle> in <citetitle remap="book">System Administration Guide: Devices and File Systems</citetitle></olink></para>
</entry>
</row><row><entry><para>Boot the system by using the kernel debugger (<command>kmdb</command>)
to track down a system problem.</para>
</entry><entry><para>Booting <command>kmdb</command></para>
</entry><entry><para><xref linkend="euayz" /></para>
</entry><entry><para> <xref linkend="fvzpl" /></para>
</entry>
</row><row><entry><para>Boot the system in failsafe mode to repair an important system file
that is causing system boot failure.</para>
</entry><entry><para>Booting the failsafe archive</para>
</entry><entry><para><xref linkend="ggqgc" /></para>
</entry><entry><para> <xref linkend="fvznb" /></para>
</entry>
</row><row><entry><para>To recover from a hung system and force a crash dump.</para>
</entry><entry><para>Recovery boot</para>
</entry><entry><para><xref linkend="hbsparcboot-70469" /></para>
</entry><entry><para><xref linkend="fvzni" /></para>
</entry>
</row>
</tbody>
</tgroup>
</table>
</sect1>
</chapter><?Pub *0000034765 0?>
