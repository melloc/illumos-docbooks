%!PS-Adobe-2.0 EPSF-2.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 8
%%For: (Kirk S Fielding) (Sun Microsystems, Inc.)
%%Title: (SimpKerbExch1.eps)
%%CreationDate: (1/23/02) (2:09 PM)
%%BoundingBox: 80 -38 314 202
%%HiResBoundingBox: 80.5054 -37.2402 313.377 201.1777
%%DocumentProcessColors: Black
%%DocumentFonts: Courier
%%+ Helvetica
%%DocumentNeededFonts: Courier
%%+ Helvetica
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%%AI5_FileFormat 4.0
%%BeginPreview: 233 238 1 238
% 000000000000000000000000000000000000000000000000000000000000
% 000000000002000000000000008000000000000000000000000000000000
% 100110000000000004040000000000000000000000000000000000000000
% 3002901881846604DB820000004000000000000000000000000000000000
% 1002902542049414420080D2104000000000000000000000000000000000
% 1007900620048C1340030802004000000000000000000000000000000000
% 100451051004941B50000000104000000000000000000000000000000000
% 12045039E004740A480288DA185000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000008002000000000000008000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000394000000000000003E33E00000000000000000000000000000000000
% 000450000000000020000048800000000000000000000000000000000000
% 000014CA62318263260C0880800000000000000000000000000000000000
% 00001529024A529429120090800000000000000000000000000000000000
% 000815E9027A12F3260A0884800000000000000000000000000000000000
% 0004550902425280A1120084800000000000000000000000000000000000
% 000394C92231CA63AE1E087C800000000000000000000000000000000000
% 000000000000400000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000400000000000008000000000000FFE800000000000000000000
% 00050000140000084001040000000000001C0007C0000000000000000000
% 0005C66194C808084C0CE4CA8000000003C000001C000000000000000000
% 00052100552B50085212242A400000000C00000003800000000000000000
% 00052701D5035808502204AA400000002000000000600000000000000000
% 00052942550480485002052A400000018000000000180000000000000000
% 00052F23D4E49C084E1CE5EA400000020000000000060000000000000000
% 0000000000000000000000000000000C0000000000010000000000000000
% 00000000000000000000000000000010000000000000C000000000000000
% 000000000000000000000000000000200000000000002000000000000000
% 000100000040000000000000000000400000000000001000000000000000
% 000400000080000000000000000000800000000000000800000000000000
% 00053099B88C8399C8231800000001000000000000000400000000000000
% 00054D24009280254854A400000002000000000000000200000000000000
% 0005433C389083BD22879800000004000000000000000200000000000000
% 000549200090802130040400000004000000000000000100000000000000
% 00053098B88E839932733A00000008000000000000000080000000000000
% 000000000000000000000000000000000000000000000080000000000000
% 000000000000000000000000000010000000000000000080000000000000
% 000000000000000000000000000010000000000000000040000000000000
% 0000000000000000000000000006100000022F0E00000040000000000000
% 000000000000000000000000000710000002489100000040000000000000
% 0000000000000000000000000007A0000002888000000040000000000000
% 00000000001FFFFFFFFFFFFFFFFFC0000003880000000040000000000000
% 0000000000100000000000000007A000000288A000000040000000000000
% 000000000010000000000000000710000002489100000040000000000000
% 0000000000100000000000000004100000022F0E00000040000000000000
% 000000000010000000000000000010000000000000000040000000000000
% 000000000010000000000000000010000000000000000080000000000000
% 000000000010000000000000000008000000000000000080000000000000
% 000000000010000000000000000008000000000000000000000000000000
% 000000000010000000000000000004000000000000000100000000000000
% 000000000010000000000000000004000000000000000200000000000000
% 000000000010000000000000000002000000000000000600000000000000
% 000000000010000000000000000001000000000000000400000000000000
% 000000000010000000000000000000800000000000000800000000000000
% 000000000010000000000000000000400000000000001000000000000000
% 000000000010000000000000000000200000000000006000000000000000
% 00000000001000000000000000000018000000000000C000000000000000
% 0000000000100000000000000000000C0000000000010000000000000000
% 000000000010000000000000000000030000000000060000000000000000
% 00000000001000000000000000000000C000000000180000000000000000
% 000000000010000000000000000000003000000000600000000000000000
% 000000000010000000000000000000000E00000003000000000000000000
% 0000000000100000000000000000000001E0000038000000000000000000
% 00000000001000000000000000000000001F0007C0000000000000000000
% 0000000000100000000000000000000000007FE000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000000010000000000000000000000000020000000000000000000000
% 000000001FFFF00000000000000000000000020000000000000000000000
% 00000001C000070000000000000000000000020000000000000000000000
% 0000001C0000007000000000000000000000020000000000000000000000
% 000000C00000000E00000000000000000000020000000000000000000000
% 000003000000000180000000000000000000020000000000000000000000
% 00000C000000000060000000000000000000020000000000000000000000
% 000030000000000018000000000000000000020000000000000000000000
% 000040000000000004000000000000000000020000000000000000000000
% 000080000000000002000000000000000000020000000000000000000000
% 000100000000000001000000000000000000020000000138300000000000
% 000600000000000000C00000000000000000020000280204880000080000
% 000400000000000000400000000000000000020000400440801588486000
% 000800000000000000200000000000000000020000080C02804A90AA4000
% 00100000000000000010000000000000000002000010020280401C0C7000
% 0020000000000000000800000000000000000200004003008848002A0800
% 0020000000000000000800000000000000000200007A113C70301C697000
% 004000000000000000040000000000000000020000000000000000000000
% 004000000000000000040000000000000000000000000000000000000000
% 008000000000000000020000000000000000000000000000000000000000
% 008000001800000000020000000000000007E73E00000100040000000000
% 0080000024000200000218000000000000008EC800000102040000000000
% 0080000040043200000038000000000000018848000005326518C4000000
% 00800000400ACA000002F80000000000000089C800000B4A94A52A000000
% 00000000411F02000000FD555555555555518948000011525494DF000000
% 0080000044008A00000278000000000000018CC80000098A94A420000000
% 00800000380602000002180000000000000187C80000076A771CC6000000
% 008000000000000000020800000000000000000000000000000000000000
% 008000000000000000020000000000000000000000000000000000000000
% 004000000000000000040000000000000000000000000000000000000000
% 0040000000000000000400000000000000000000000000000007C63C0000
% 002000000000000000080000000000000000000000000000000108880000
% 0020000000000000000800000000000000000000000004651CC100000000
% 001000000000000000100000000000000000000000000A94A52100880000
% 001000000000000000100000000000000000000000000CF4A0C100800000
% 000800000000000000200000000000000000000000000084A42108880000
% 000400000000000000400000000000000000000000000E649CC107008000
% 000200000000000000800000000000000000000000000000000000000000
% 000180000000000003000000000000000000000000000000000000000000
% 0000C0000000000006000000000000000000000000000000000000000000
% 000030000000000018000000000000000000000000000000000000000000
% 000008000000000030000000000000000000000000000000000000000000
% 0000070000000000C0000000000000000000000000000000000000000000
% 000000C00000000600000000000000000000000000000000000000000000
% 000000380000001800000000000000000000000000000000000000000000
% 00000007800003C000000000000000000000000000000000000000000000
% 000000007D457C0000000000000000000000000000000000000000000000
% 000000000028000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000394000000000000000000000000000000000000000000000000000000
% 280450000000000000000000000000000000000000000000000000000000
% 040014CA624C420E33984B23800000000000000000000000000000000000
% 1800152902500510402144A4800000000000000000000000000000000000
% 040815E9024CE7007B993424800000000000000000000000000000000000
% 04045509024200000005B424800000000000000000000000000000000000
% 3A0394C923CEE70E6BB8A3A3800000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 00000020000003E33E008000000000000000000000000000000000000000
% 000400200000200488028000000000000000000000000000000000000000
% 0004C0A4272220880802A498000000000000000000000000000000000000
% 0005212055252008080294A0000000000000000000000000000000000000
% 0005022E8488A08848029498000000000000000000000000000000000000
% 0005002004C0200848029484000000000000000000000000000000000000
% 0004E1EE74CF2087C88292B8000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000080000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000020000200080000000000000000000000000000000000000000000
% 000000000000200200000000000000000000000000000000000000000000
% 0002030AA380A432B0018C60000000000000000000000000000000000000
% 000544C29481604288025080000000000000000000000000000000000000
% 000888D2948A2E8AAA021E00000000000000000000000000000000000000
% 000000929480200284024000000000000000000000000000000000000000
% 000E07229388EE8A94419A00000000000000000000000000000000000000
% 000000000080000004000000000000000000000000000000000000000000
% 000000000300000008000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 0000000000001001F19F0000000000000000000000000000000000000000
% 000000000000500042440000000000000000000000000000000000000000
% 0003184802305C6004040CC0000000000000000000000000000000000000
% 000425400448529004040120000000000000000000000000000000000000
% 00088530267852F004240A20000000000000000000000000000000000000
% 000005B12040528004240120000000000000000000000000000000000000
% 0008B8A0E730526003A405C0000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000020001000040000000000000000000000000000000000000000000
% 000001000005000100000000000000000000000000000000000000000000
% 00033932A065C6614C266E00000000000000000000000000000000000000
% 0004890A9095294153490000000000000000000000000000000000000000
% 0008812A90152F4150CF0E00000000000000000000000000000000000000
% 0000814A9015284152480000000000000000000000000000000000000000
% 0003393A90E526414C262E80000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 7C63E003E800000000020001000000000000000000000000000000000000
% 108800000000000000080004000000000000000000000000000000000000
% 1080800088A4CC38B8CAA384309980000000000000000000000000000000
% 111001000A492001010A9485492500000000000000000000000000000000
% 100880008A39E9823A2A9485433C00000000000000000000000000000000
% 108801E00A410000000A9485492000000000000000000000000000000000
% 1078800089A4C43A3E2A9385309880000000000000000000000000000000
% 000000000000000000000480000000000000000000000000000000000000
% 000000000000003800000300000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000
% 22E0E000100038800A000000180000000000000000000000000000000000
% 248910012000040102000000040020000000000000000000000000000000
% 28880000410002996A92C318404326600000000000000000000000000000
% 38800000C02002A14A5204A0400429400000000000000000000000000000
% 288A0000A3A802994A52A88040E8AF400000000000000000000000000000
% 248910F0101044854A5204C4440028400000000000000000000000000000
% 22F0E00013903CB94B8A670038E8A6400000000000000000000000000000
% 000000000010000000000000000000000000000000000000000000000000
% 000000000020000000000000000000000000000000000000000000000000
%%EndPreview
%AI3_ColorUsage: Black&White
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 220.3682 62.707 220.3682 62.707
%AI3_TileBox: -77.0913 -287.8604 514.9092 450.1396
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -58.4243 243.4995 1.9461 1009 717 18 1 1 7 43 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:-77.0913 -287.8604
%%AI3_PaperRect:-9 783 603 -9
%%AI3_Margin:9 -40 -9 9
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI7_Thumbnail: 128 128 8
%%BeginData: 8248 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFA8FD05FFA8FFA8FFFFA8FD06FFA8FD05FFA8FD09FFA8FFA8FD11
%FFA8FD49FF7D7DFFFFFFA827A852FFFF52FFFD04A87DA87DA87DFFFD04A8
%7DA87DA87DA8FF27FF7D7DA8FFFF7DFD06A8FF7DFFFF7DA87DFD49FF7DA8
%FFFFFF7D7D7D52FFFF7DFF7DA87DFF7D7D7DFF7DFF7DFF7DA87DFFA87DA8
%7DFF7DFF52FF7DFFFF7DFFFF7DFF7DA8FFA8FFFF7DFFA8A8FD48FFA87DFF
%FFFF52FF527DFFFF52FFFD047D527D52FF52FF7DFF7D7D52FFFF5252A8FF
%7DFF7DFF7DFFA87D7DA87DA87D52FF52A8FF7D7D7DA8A8FD56FFA87D7DFD
%06FF7DFD1DFF7DFFA8FDCDFFFD05A8FD05FFA8FD11FFA8FD07FFA8A87DFF
%FFA8A8A87DA8FD52FF7DFFA852FD04A87D7D52FFFF7DA8A87DFFA87D7DFF
%A8A87DA8A87D7D7DFFFFFFA8A8A8FF7DA8FFA8A8FF7D7DFD53FF7DFFA87D
%7D7DA87D7DA87DFFFF7DFF7D7DFF7DA87DFFFD057DA87D7D7DFFFFFF7D7D
%FFA8A8FF7DFFA87D7DFD53FF7D7D7D527D7DA8FD047DFFFF52FF527DA87D
%527D7D7D527D527DA87D7D7DFFFF52A852FF7DA8FFA852A8527DFD66FFA8
%A8FD6AFFA8FF7DFFFFFFA8FD06FFA87DFD0DFFA8FD08FFA8A8FD04FFA8FD
%19FFA87DA87DA87DA87DA87DA8FD30FF52FF527DFFA8A87DFFFFA87DFF7D
%7DA8A8A87DA8FFA8FFFFFF27FFFF52FFA87DFFFFA87DFF52A87DFFA8A87D
%A8A8A8FD12FFFD04A8FD0AFFFD04A8FD2DFF52FF52A87D7DF8A8FFFF5252
%FF7D527D7D7D527D527DA8FFFF7DFFFF52FF52A8A8FF52A8A87D7D7DFF7D
%527D52FF52FD0FFFA8A87DFD12FFA87DA8FD2AFF7DFF7DA8A852527DFFFF
%7D52FF527D7D7D52A8527D7DFFFFFF52FFFF7DFF7D7DFFFF7D7DFF527D7D
%FF527D7D7DFF7DFD0EFF7DA8FD16FFA8A8A8FD64FF7DFD1BFF7DFD62FFA8
%FD1DFFA8FD26FFA8FFA8FFFFA8FD04FFA8FD05FF7DFD0FFFA8FD18FFA8A8
%FD1FFFA8FD25FF52FF7D7DFF7DFFA8A87D52A8A8FFFFFF52A8A8FF7DFFA8
%7DFFFFA8A87DFFA8FF7D7DFFFD04A8FD12FFA8FD21FF7DFD24FF52FF52FF
%A87D52FF527D527D52FFFFFF527D7DA852FF527DA87D7D7D52A87DFF52FF
%A87D7D7D52FD11FF7DFD23FFA8FD23FF7DFF7D7DFF7DA8FD067DA8FFFF7D
%7D7DFF7DFF7D7DFFA8A87D7D52FFFF7D7DFF7DA87D7DA8FD0FFFA8FD24FF
%A8FD57FFA8FFFFA8FD24FFA8FD57FFF87DFFA8FD0EFFA8FFA87DA8A8FFA8
%A8A8FD0DFF7DFD33FFA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA8F8F827A8FD0EFF5252A87DFF7DA87DFF
%A8FD0DFFA8FD33FFA8FD22FFF8F8A8A8FD0EFF5252FF7DFFA8A87DFFA8FD
%0DFFA8FD33FFA8FD22FF27A8FFA8FD0EFF52A8527D7D7DFF7D7D7DFD0DFF
%A8FD33FFA8FD25FF7DFD24FFA8FD34FFA8FD26FFA8FD23FF7DFD34FFA8FD
%26FFA8FD22FFA8FD35FFA8FD27FFA8FD20FFA8A8FD35FF7DFD27FFA8A8FD
%1FFFA8FD36FFA8FD28FFA8A8FD1CFFA8A8FD37FFA8FD2AFFA8A8FD19FFA8
%A8FD38FFA8FD2BFFA87DFD16FFA87DFD3AFFA8FD2DFFA8A8A8FD11FF7DA8
%FD3CFFA8FD30FFA8A87DA87DA8FD05FFA87DA87DA8A8FD3EFFA8FD35FFA8
%A8A87DA8A8FD44FFA8FD38FF7DFD46FF7DFD38FFA8FD46FFA8FD38FF7DFD
%46FFA8FD38FFA8FD46FFA8FD38FF7DFD46FFA8FD38FFA8FD46FFA8FD38FF
%7DFD46FFA8FD38FFA8FD46FFA8FD38FF7DFD46FF7DFD38FFA8FD46FFA8FD
%38FF7DFD46FFA8FD38FFA8FD46FFA8FD38FF7DFD46FFA8FD38FFA8FD46FF
%A8FD38FF7DFD46FFA8FD38FFA8FD46FFA8FD38FF7DFD46FF7DFD38FFA8FD
%40FFA87DA87DA87D7D7DA87DA8A8FD33FF7DFD3DFFA8A8A8FD0CFFA8A8A8
%FD30FFA8FD3AFFA87DA8FD12FFA8A8A8FD2DFF7DFD38FFA8A8FD18FFA8FD
%2CFFA8FD37FFA8A8FD1AFFA8A8FD2AFF7DFD36FFA8FD1EFFA8FD29FFA8FD
%0AFF7DFD04FFA8FFA8FF7D7DFFFFA87DFD04FFA8FD07FFA8FD0FFF7DFD20
%FFA8FD28FF7DFD09FF7DFF52FFFFFF527D7DFF52FF527DA8FF7DA87DFF52
%A8A8A87DA87DFF52FFA8A8FD0BFFA8FD22FFA8FD27FFA8FD0AFF52FD04FF
%7D7DA8FF7DFF7D52FFFFFF52FFFF7DFF7D527D52FFFF7D527D7DFD0AFFA8
%A8FD22FFA8FD27FF7DFD09FF52A8A8FFFFFF52FF52FF27A87DA87D7DA87D
%7DFF52FF52FD047DFF52A87D7DA8FD09FFA8FD24FFA8FD20FFA8A8FFFD07
%A8FFA8A8FD2DFF7DFD0DFFFD05A8FD05FFA8FD0CFFA8FFFFA8FD1DFFEB7D
%52527DEB527D525252EBEBFD0BFF7DFD07FF7DFD19FFA8FD0DFF7DFFA852
%A8FFA8A87D7D52FD0CFF7DFFA8277DFD1CFFA8EB7D52EB527DEB7D52EBEB
%A8FD0AFF7D7DFFA827FFFFA8A8527DFF7DA8A8FFFFA87DFD10FF7DFD0DFF
%52FFA87D527D7D7D52A852FD0DFF52F8F87D7DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DEB52527D52EB7D2752EB7DA8FD
%09FF52FF52A87D7DFFA87D7D52A8A87D52527DFF527DA8FD0FFFA8FD0DFF
%7DA87D7D7DA8A87D7DA87DFD0CFFA8FF52F8A8FD1CFFA8EB7D52EB7DFD04
%52EBEBFD0AFFA87D7D7DA87DFF7DA87D52FD067DFF7D7DA8FD0FFF7DFD24
%FFA8FFFF52A8FD1CFF7DEBEBEB7DEBEBEB7DEBEBEB7DFD1DFFA8FD0FFFA8
%FD24FFA8FD20FFA87DA8A8A87DA8A8A87DA8A8A8FD2DFFA8FD23FFA8A8FD
%40FF7DFFFFFF7D7D7DFFA87DA87D7DA8FD0DFFA8FD22FFA8FD37FFA8A8FF
%FD04A87DFF7D527DFFFFFF7DFFFF7DFFA87DA8FD0FFFA8FD20FFA8A8FD36
%FFA852A8FF527D7DFF7D52FF527DA8FFFF7DFFFF52FF7D7D7DFD10FFA8FD
%1FFFA8FD37FFA8A87DFF7D7D52FF7DA87D277DFFFFFF7DFFFF7DA87D7DA8
%FD11FF7DFD1CFFA8A8FD62FFA8FD19FFA8A8FD65FFA8A8A8FD14FFA87DFD
%6AFFA8A8A8FD0FFF7DA8A8FD6DFFA87DA87DA87DA87DA87DA87DA87DA8A8
%FDFCFFFDE6FFA87DFD05FF7DA87DFD06FFA8FD22FFA8FD4CFF7DA8A8FFFF
%FF7DFF7D7DA8FF7DFF7DA852FFFFA8FF7DA8FFFFA8A8A8FFFFFF7D7DFFA8
%A87DFFA8A87D7DA8FFFFFD05A87DA8FD4DFF52FD04FF7DFFA8527D52A8FD
%047DFFFF52FF527DA87D7D7D52FFFFFF52A8A87D52527D7D527D527DFF7D
%FF7D52FF52A87DFD4CFF7D7DA8FFFFFF7DA87D7D52A87DA852A87DFFFF7D
%A8277DFFA8A8527DA8FFFF52FD097DA852FFA8A87D7DFF7D52A8FD6BFF52
%FD6CFFA8FD0FFF7DA8A8FFA8A87D7DA8FD05FF7DFD5AFF52FFA8A8FFFF7D
%7D7DA87DA8A8FF52FFA8FF7DA87DFFFFA87DFF7DFFFF7D52FFFFFF7DA8FF
%527DA8FF7D7DFD55FF7DFF7D7DA8FF7D7DA8527DA8FFFF7D7D7DFF7D7D7D
%FFFF7DA8FF7DFFA87D7DFFFFFFA87DFF7DA852FF7D7D7DFD54FF52FF7D7D
%A8FF52FD067DFF5252A8FF527D7DFFFFA87DFFA87D7D5252FFFFFFA87DFF
%FD047D277D7DFD63FF7DFFFF7DFD0EFFA8FDF3FFA8FD06FFA8A8FD63FF7D
%7DA8A8A852FFA8FF7D7D7DFF7D7DA8FF7DA8527D7DA87DA8F8FF7D7DA8FF
%A8A8FFA87DFFA8A8A87D7DFD56FF7DA87DFFFD047DFF7D7DA87D7DA8A8FF
%7D7DA87DA87D7DFF7DFFFD047DFFFFFF7DFFFFFF7D7D7DA8A8FD55FF527D
%7DFF7D7D52A8FF527D7DA8527D7DFF527D52A87DA852FF52FF527D7D7DFF
%A8FF7D7DFF52A8527D7DA8FD55FF7DFD0CFF7D52FD0EFFA8A8FFA8FD71FF
%A8FFA8FD05FFA87DA8FFFF7DA87D7D7DFFA8FD5AFF7DA8FFA87D7DA8FFFF
%FF7DFF7DFFFFFF7DFF52FF7DA8A8FF7DFFFF7DFFFF7DFFA8FF7DFFFF52FF
%FFA8FD57FF7D7D7DFF7D527DFFFFFF7D7D277DFF527DA87DFF7DFF7D527D
%A8FF52FFFF7DA87DA87DFFFF52FF52FF52FD56FF52A8A8A852A852FFFFFF
%527D7D7DFF7D7DFF7DFF52FF7D7D7DFFFF7DFFFF7DA852A87DFFFF7DFFA8
%7DA8FDD8FFA8FFA8FD0BFFA8FFA8FD09FFA8FFFFA8FD60FFA87D7D7D27FF
%FF7DA87D7D7DFFFFFF7D27FF7D7DA8A8A87DA87DA8FF7D7DFF52FFA8A87D
%7DA8A8FD59FF7DA852FF7DFFA87D7D7D52A8A8FF52FF7DFF52FFFD047DFF
%A87DFF7DFFA87D52FF527D7D7D52FD59FFFD057DFF7D7D7D527D7DA8FFA8
%7D7DFF7DFF7D527D52FFA87DFF7D7DFF52A87D7D527D7D7DA8FDFCFFFDFC
%FFFDFCFFFDFCFFFDFCFFFD65FFA87DA8FFFF7DA87D7DA8FD05FFA8A87DFF
%A8FFFFFF7DFFFFFFA8FD0BFFA8FD0BFFA8FFFFA8FD04FFA8FD45FF7DFFFF
%7DFF7DFF52FD07FF7DA8FF7D7DA8FF7D7DFF7D27FFFFFFA87D7DA8A87DFF
%7D7D7DFF7D7D7DFFFD047DFF7D7DFF52FFA8A87D7DFD45FF7DFFFF7DFF7D
%A87DFFFFFFA8A8FFFFA8A8FF7DFFA8FF277D7DA87DFFA8A87DA87DFF7D52
%FF7D7DA8FF7D7DA87DFF7DA8A8FF7DFFFF7D52FF527D7DFD45FF7DFFFF52
%A852A852FFFFFF7DA8A8FF7DA8FF7D7DA8FF7D52A87D7DFFFFFF7D527DFF
%5252FF527D7DFF527D7DA87D52A8A8FF7D7DFF52A87D7D527DFD63FF7D7D
%A8FD0BFFA8A87DFD51FFA8A87D7DA87DFFA8A8A8FD06FFA8A87DFD06FF7D
%A87DFFA8FFA8FFFFFFA8A8FD04FFA8FFA8FD07FFA8A8A8FD05FFA8FD44FF
%5252FF7DFFA8A87DFFA8FD06FF5252FFA87DFFA8FFFF7DFFA8A87DA8A87D
%FF7DA87DA8A8A8FF27FFA8FFA8A87D7DFFFF7DFFA8FFFD04A827FFFFA8A8
%7DFD3FFF5252FF52FF7DA852FFA8FFFFA87DFFFF5252FF527D527DFFFF52
%FF7DA8527D7DA8FF7D527DFF7D52FF52FF527DFF7D52A87DFF52FFA87D7D
%7D52FF52FF52A87D7DFD3FFF7DA8527DA87DFF7DA87DFFFFA8A8A8FF7DA8
%527D7DA852FFFF7D7D7DFF7D7DA87DFF527D7DA87D7DA8F8FF7DA8A87D7D
%A8A8FF7DA87D7DA87D7DFF7DFFA87DA87DFD54FF7DA8FD67FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Courier
%%IncludeFont: Helvetica
userdict /_useSmoothShade false put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Courier Courier
[/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI55J_Tsume: None
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
[161/degree 173/notequal 176/infinity/plusminus/lessequal/greaterequal
181/mu/partialdiff/summation/product/pi/integral 189/Omega 
195/radical 197/approxequal 198/Delta 214/divide/lozenge 240/apple
/_Symbol_/Symbol 0 0 0 TZ
%AI5_Begin_NonPrinting
Np
8 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green & Blue)
(Green & Blue) 0 2 Bd
[
<
99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9
A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9
B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9
C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9
D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9
E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9
F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B
3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F5050515253535455565657585959
5A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F7071717273747475767777
78797A7A7B7C7D7D7E7F80808182838384858686878889898A8B8C8C8D8E8F8F9091929293949595
96979898999A9B9B9C9D9E9E9FA0A1A1A2A3A4A4A5A6A7A7A8A9AAAAABACADADAEAFB0B0B1B2B3B3
B4B5B6B6B7B8B9B9BABBBCBCBDBEBFBF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
[
1 0.75 0 0 1 50 100 %_BS
%_1 0.75 0 0 1 50 100 Bs
0.6 0 1 0 1 50 0 %_BS
%_0.6 0 1 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green)
(Pink, Yellow, Green) 0 3 Bd
[
<
00000000000000000000000000000000000000010101010101010101010101010101010101010101
01010101010202020202020202020202020202020202020202020203030303030303030303030303
03030303030303030404040404040404040404040404040404040404050505050505050505050505
05050505050505060606060606060606060606060606060606060707070707070707070707070707
07070707080808080808080808080808080808080809090909090909090909090909090909090A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0C0D0D0D0D
>
<
050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617
17181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F
2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434445454647474849494A
4B4C4C4D4E4F4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061626363646566666768
69696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F80818283838485868787
88898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8
A9AAABACADADAEAFB0B1B2B3
>
<
CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7
B7B6B5B5B4B3B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B
9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B
7A7978777676757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A5958
5756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A3938383736353433
3231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
0
1 %_Br
<
737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E
4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D
2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A1918181717161615141413
1312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202
020201010101010000000000
>
<
00000000000000000000000001010101010101010101010101010101010101010101010102020202
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030303030303030303030303040404040404040404040404040404040404040404040404040404
04040404040404040404050505050505050505050505050505050505050505050505050505050505
050505050505050505050505
>
<
BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7
C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACA
CACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
>
0
1 %_Br
[
0.05 0.7 0 0 1 50 100 %_BS
%_0.05 0.7 0 0 1 50 100 Bs
0 0.02 0.8 0 1 57 36 %_BS
%_0 0.02 0.8 0 1 57 36 Bs
0.45 0 0.75 0 1 37 0 %_BS
%_0.45 0 0.75 0 1 37 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red & Yellow)
(Purple, Red & Yellow) 0 3 Bd
[
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4
D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDC
DDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5
E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDED
EDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5
F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFE
FEFEFEFFFFFF
>
0
1 %_Br
<
E6E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E
6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E
1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEA
EAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7
F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223
242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F4041424344454546
4748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A
6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7E7F80818283848586878788898A8B8C8D8E
8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1
B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC
>
0
1 %_Br
[
0 0.04 1 0 1 50 100 %_BS
%_0 0.04 1 0 1 50 100 Bs
0 1 0.8 0 1 50 50 %_BS
%_0 1 0.8 0 1 50 50 Bs
0.9 0.9 0 0 1 50 0 %_BS
%_0.9 0.9 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060607070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_BS
%_0 1 0 0 1 50 100 Bs
1 1 0 0 1 50 80 %_BS
%_1 1 0 0 1 50 80 Bs
1 0.0279 0 0 1 50 60 %_BS
%_1 0.0279 0 0 1 50 60 Bs
1 0 1 0 1 50 40 %_BS
%_1 0 1 0 1 50 40 Bs
0 0 1 0 1 50 20 %_BS
%_0 0 1 0 1 50 20 Bs
0 1 1 0 1 50 0 %_BS
%_0 1 1 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 70 %_BS
%_1 0 50 70 Bs
0 0 50 0 %_BS
%_0 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E6
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_BS
%_0 0 1 0 1 52 19 Bs
0 0.55 0.9 0 1 50 100 %_BS
%_0 0.55 0.9 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Purple Radial)
(Yellow & Purple Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666564646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_BS
%_0 0.08 0.67 0 1 50 14 Bs
1 1 0 0 1 50 100 %_BS
%_1 1 0 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
1 g
(K=0) Pc
0 g
(K=100) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0.75 g
(K=25) Pc
0.5 g
(K=50) Pc
0.25 g
(K=75) Pc
0 g
(K=100) Pc
Bb
2 (Black & White) -7971.1318 8254.207 0 0 1 0 0 1 0 0 Bg
0 BB
(Black & White) Pc
0.25 0 0 0 k
(C=25 M=0 Y=0 K=0) Pc
0.5 0 0 0 k
(C=50 M=0 Y=0 K=0) Pc
0.75 0 0 0 k
(C=75 M=0 Y=0 K=0) Pc
1 0 0 0 k
(C=100 M=0 Y=0 K=0) Pc
0.25 0.25 0 0 k
(C=25 M=25 Y=0 K=0) Pc
0.5 0.5 0 0 k
(C=50 M=50 Y=0 K=0) Pc
0.75 0.75 0 0 k
(C=75 M=75 Y=0 K=0) Pc
1 1 0 0 k
(C=100 M=100 Y=0 K=0) Pc
Bb
2 (Pink, Yellow, Green) -7971.1318 8254.207 0 0 1 0 0 1 0 0 Bg
0 BB
(Pink, Yellow, Green) Pc
0 0.25 0 0 k
(C=0 M=25 Y=0 K=0) Pc
0 0.5 0 0 k
(C=0 M=50 Y=0 K=0) Pc
0 0.75 0 0 k
(C=0 M=75 Y=0 K=0) Pc
0 1 0 0 k
(C=0 M=100 Y=0 K=0) Pc
0 0.25 0.25 0 k
(C=0 M=25 Y=25 K=0) Pc
0 0.5 0.5 0 k
(C=0 M=50 Y=50 K=0) Pc
0 0.75 0.75 0 k
(C=0 M=75 Y=75 K=0) Pc
0 1 1 0 k
(C=0 M=100 Y=100 K=0) Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -7971.1318 8254.207 0 0 1 0 0 1 0 0 Bg
0 BB
(Yellow & Purple Radial) Pc
0 0 0.25 0 k
(C=0 M=0 Y=25 K=0) Pc
0 0 0.5 0 k
(C=0 M=0 Y=50 K=0) Pc
0 0 0.75 0 k
(C=0 M=0 Y=75 K=0) Pc
0 0 1 0 k
(C=0 M=0 Y=100 K=0) Pc
0.25 0 0.25 0 k
(C=25 M=0 Y=25 K=0) Pc
0.5 0 0.5 0 k
(C=50 M=0 Y=50 K=0) Pc
0.75 0 0.75 0 k
(C=75 M=0 Y=75 K=0) Pc
1 0 1 0 k
(C=100 M=0 Y=100 K=0) Pc
Bb
2 (Rainbow) -7971.1318 8254.207 0 0 1 0 0 1 0 0 Bg
0 BB
(Rainbow) Pc
0.25 0.125 0 0 k
(C=25 M=13 Y=0 K=0) Pc
0.5 0.25 0 0 k
(C=50 M=25 Y=0 K=0) Pc
0.75 0.375 0 0 k
(C=75 M=38 Y=0 K=0) Pc
1 0.5 0 0 k
(C=100 M=50 Y=0 K=0) Pc
0.125 0.25 0 0 k
(C=13 M=25 Y=0 K=0) Pc
0.25 0.5 0 0 k
(C=25 M=50 Y=0 K=0) Pc
0.375 0.75 0 0 k
(C=38 M=75 Y=0 K=0) Pc
0.5 1 0 0 k
(C=50 M=100 Y=0 K=0) Pc
Bb
2 (Steel Bar) -7971.1318 8254.207 0 0 1 0 0 1 0 0 Bg
0 BB
(Steel Bar) Pc
0 0.25 0.125 0 k
(C=0 M=25 Y=13 K=0) Pc
0 0.5 0.25 0 k
(C=0 M=50 Y=25 K=0) Pc
0 0.75 0.375 0 k
(C=0 M=75 Y=38 K=0) Pc
0 1 0.5 0 k
(C=0 M=100 Y=50 K=0) Pc
0 0.125 0.25 0 k
(C=0 M=13 Y=25 K=0) Pc
0 0.25 0.5 0 k
(C=0 M=25 Y=50 K=0) Pc
0 0.375 0.75 0 k
(C=0 M=38 Y=75 K=0) Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0) Pc
Bb
2 (Purple, Red & Yellow) -7971.1318 8254.207 0 0 1 0 0 1 0 0 Bg
0 BB
(Purple, Red & Yellow) Pc
0.125 0 0.25 0 k
(C=13 M=0 Y=25 K=0) Pc
0.25 0 0.5 0 k
(C=25 M=0 Y=50 K=0) Pc
0.375 0 0.75 0 k
(C=38 M=0 Y=75 K=0) Pc
0.5 0 1 0 k
(C=50 M=0 Y=100 K=0) Pc
0.25 0 0.125 0 k
(C=25 M=0 Y=13 K=0) Pc
0.5 0 0.25 0 k
(C=50 M=0 Y=25 K=0) Pc
0.75 0 0.375 0 k
(C=75 M=0 Y=38 K=0) Pc
1 0 0.5 0 k
(C=100 M=0 Y=50 K=0) Pc
Bb
2 (Green & Blue) -7971.1318 8254.207 0 0 1 0 0 1 0 0 Bg
0 BB
(Green & Blue) Pc
0.25 0.125 0.125 0 k
(C=25 M=13 Y=13 K=0) Pc
0.5 0.25 0.25 0 k
(C=50 M=25 Y=25 K=0) Pc
0.75 0.375 0.375 0 k
(C=75 M=38 Y=38 K=0) Pc
1 0.5 0.5 0 k
(C=100 M=50 Y=50 K=0) Pc
0.25 0.25 0.125 0 k
(C=25 M=25 Y=13 K=0) Pc
0.5 0.5 0.25 0 k
(C=50 M=50 Y=25 K=0) Pc
0.75 0.75 0.375 0 k
(C=75 M=75 Y=38 K=0) Pc
1 1 0.5 0 k
(C=100 M=100 Y=50 K=0) Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -7971.1318 8254.207 0 0 1 0 0 1 0 0 Bg
0 BB
(Yellow & Orange Radial) Pc
0.125 0.25 0.125 0 k
(C=13 M=25 Y=13 K=0) Pc
0.25 0.5 0.25 0 k
(C=25 M=50 Y=25 K=0) Pc
0.375 0.75 0.375 0 k
(C=38 M=75 Y=38 K=0) Pc
0.5 1 0.5 0 k
(C=50 M=100 Y=50 K=0) Pc
0.125 0.25 0.25 0 k
(C=13 M=25 Y=25 K=0) Pc
0.25 0.5 0.5 0 k
(C=25 M=50 Y=50 K=0) Pc
0.375 0.75 0.75 0 k
(C=38 M=75 Y=75 K=0) Pc
0.5 1 1 0 k
(C=50 M=100 Y=100 K=0) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0.125 0.125 0.25 0 k
(C=13 M=13 Y=25 K=0) Pc
0.25 0.25 0.5 0 k
(C=25 M=25 Y=50 K=0) Pc
0.375 0.375 0.75 0 k
(C=38 M=38 Y=75 K=0) Pc
0.5 0.5 1 0 k
(C=50 M=50 Y=100 K=0) Pc
0.25 0.125 0.25 0 k
(C=25 M=13 Y=25 K=0) Pc
0.5 0.25 0.5 0 k
(C=50 M=25 Y=50 K=0) Pc
0.75 0.375 0.75 0 k
(C=75 M=38 Y=75 K=0) Pc
1 0.5 1 0 k
(C=100 M=50 Y=100 K=0) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (Art Brush Tool)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (Art Brush Tool)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Undo New Calligraphic Brush) (Calligraphic Brush Tool)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(Layer 1) Ln
0 A
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
-7971.1313 233.7207 m
8411.8672 233.7207 L
(N) *
32.4775 8254.2041 m
32.4775 -8128.7949 L
(N) *
-7971.1313 -126.2783 m
8411.8672 -126.2783 L
(N) *
392.4775 8254.2041 m
392.4775 -8128.7949 L
(N) *
201.8213 -8128.7949 m
(N) *
201.8213 8254.2041 m
(N) *
285.1963 -8128.7949 m
(N) *
285.1963 8254.2041 m
(N) *
u
u
0 R
0 G
0.5 w
189.5732 156.7588 m
123.4004 156.7588 l
123.4004 97.8779 l
S
/BBAccumRotation (-4.712389) XT
1 Ap
0 O
0 g
1 w
188.9912 160.5264 m
193.7607 156.7588 L
188.9912 152.9912 L
188.9912 160.5264 L
f
/BBAccumRotation (-2.356195) XT
U
U
u
u
0 Ap
0 R
0 G
0.5 w
163.9902 75.0537 m
230.1631 75.0537 l
230.1631 133.9346 l
S
/BBAccumRotation (-4.712389) XT
1 Ap
0 O
0 g
1 w
164.5723 71.2861 m
159.8027 75.0537 L
164.5723 78.8213 L
164.5723 71.2861 L
f
/BBAccumRotation (-2.356195) XT
U
U
0 Ap
8411.8672 82.5806 m
(N) *
-7971.1313 82.5806 m
(N) *
8411.8672 92.6431 m
(N) *
-7971.1313 92.6431 m
(N) *
1 To
1 0 0 1 80.5083 200.2988 0 Tp
0 Tv
1 Ap
190.1104 158.687 m
190.1104 200.2988 L
80.5083 200.2988 L
80.5083 158.687 L
190.1104 158.687 L
n
TP
0 -7.5 Td
0 Tr
0 O
0 g
%_ 0 50 XQ
/_Helvetica 9 8.379 -2.0251 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
36 1 Xb
0 0 1 10.8598 Xe
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 99 Th
0 Tq
240 Tg
10 0 Tl
0 Tc
0 Tw
(1.\011) Tx 
10.8598 0 Td
(At login \(or with ) Tx 
/_Courier 9 7.2449 -2.25 Tf
(kinit) Tx 
/_Helvetica 9 8.379 -2.0251 Tf
(\), \003) Tx 
-10.8598 -10 Td
(\011) Tx 
10.8598 0 Td
(Client requests a TGT \003) Tx 
-10.8598 -10 Td
(\011) Tx 
10.8598 0 Td
(that allows it to obtain \003) Tx 
-10.8598 -10 Td
(\011) Tx 
10.8598 0 Td
(tickets for services.) Tx 
(\r) TX 
TO
1 To
1 0 0 1 247.8525 89.4702 0 Tp
0 Tv
313.377 58.0547 m
313.377 89.4702 L
247.8525 89.4702 L
247.8525 58.0547 L
313.377 58.0547 L
n
TP
0 -7.5 Td
0 Tr
0 O
0 g
36 1 Xb
0 0 1 10.7211 Xe
XB
(2.\011) Tx 
10.7211 0 Td
(KDC checks \003) Tx 
-10.7211 -10 Td
(\011) Tx 
10.7211 0 Td
(database, \003) Tx 
-10.7211 -10 Td
(\011) Tx 
10.7211 0 Td
(sends TGT.) Tx 
(\r) TX 
TO
1 To
1 0 0 1 80.5054 47.0527 0 Tp
0 Tv
178.2065 -1.7744 m
178.2065 47.0527 L
80.5054 47.0527 L
80.5054 -1.7744 L
178.2065 -1.7744 L
n
TP
0 -7.5 Td
0 Tr
0 O
0 g
(3.\011) Tx 
10.7211 0 Td
(Client uses password \003) Tx 
-10.7211 -10 Td
(\011) Tx 
10.7211 0 Td
(to decrypt TGT, thus \003) Tx 
-10.7211 -10 Td
(\011) Tx 
10.7211 0 Td
(proving identity; can \003) Tx 
-10.7211 -10 Td
(\011) Tx 
10.7211 0 Td
(now use the TGT to \003) Tx 
-10.7211 -10 Td
(\011) Tx 
10.7211 0 Td
(obtain other tickets.) Tx 
(\r) TX 
TO
u
u
0 To
1 0 0 1 123.2969 71.877 0 Tp
0 Tv
TP
-11.5018 0 Td
0 Tr
74.6488 0 Xb
XB
1 Ta
248 Tg
(Client) Tx 
(\r) TX 
TO
U
u
0 R
0 G
0.5 w
158.7788 75.0483 m
158.7788 62.4248 142.9409 52.1904 123.4072 52.1904 c
103.8721 52.1904 88.0356 62.4248 88.0356 75.0483 c
88.0356 87.6743 103.8721 97.9063 123.4072 97.9063 c
142.9409 97.9063 158.7788 87.6743 158.7788 75.0483 c
s
U
U
u
u
0 To
1 0 0 1 230.1563 153.5356 0 Tp
0 Tv
TP
-9.4993 0 Td
0 Tr
0 O
0 g
1 w
(KDC) Tx 
(\r) TX 
TO
U
u
0 R
0 G
0.5 w
265.5264 156.7661 m
265.5264 144.1426 249.6895 133.9082 230.1553 133.9082 c
210.6206 133.9082 194.7842 144.1426 194.7842 156.7661 c
194.7842 169.3921 210.6206 179.624 230.1553 179.624 c
249.6895 179.624 265.5264 169.3921 265.5264 156.7661 c
s
U
U
u
0 O
0.65 g
1 w
242.3301 72.2974 m
240.7744 72.2974 239.5127 73.5601 239.5127 75.1157 c
239.5127 76.6714 240.7744 77.9341 242.3301 77.9341 C
242.3418 77.9341 L
242.3418 80.7173 L
218.002 80.7173 L
218.002 77.9634 L
218.0254 77.9478 L
219.583 77.9478 220.8447 76.6851 220.8447 75.1313 c
220.8447 73.5757 219.583 72.313 218.0254 72.313 C
218.002 72.3267 L
218.002 69.4292 L
242.3418 69.4292 L
242.3418 72.2681 L
242.3301 72.2974 L
f
u
0 To
1 0 0 1 230.1797 71.8291 0 Tp
0 Tv
TP
-8.9999 0 Td
0 Tr
0 g
(TGT) Tx 
(\r) TX 
TO
U
U
0 To
1 0 0 1 80.9546 -25.2148 0 Tp
0 Tv
TP
0 Tr
36 0 Xb
XB
0 Ta
240 Tg
(TGT = Ticket-granting ticket\r) Tx 
T*
(KDC = Key Distribution Center) Tx 
(\r) TX 
TO
0 Ap
8411.8672 33.4717 m
(N) *
-7971.1318 33.4717 m
(N) *
8411.8672 -38.0283 m
(N) *
-7971.1318 -38.0283 m
(N) *
41.6177 -8129.0439 m
(N) *
41.6177 8253.9561 m
(N) *
81.3989 -8128.793 m
(N) *
81.3989 8254.207 m
(N) *
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
