<chapter xml:id="seamplan-1">
<title>Planning for the Kerberos Service</title>
<indexterm><primary>Kerberos</primary><secondary>planning for</secondary></indexterm>
<indexterm><primary>Kerberos</primary><secondary>configuration decisions</secondary></indexterm>
<indexterm><primary>planning</primary><secondary>Kerberos</secondary><tertiary>configuration decisions</tertiary></indexterm>
<para>This chapter should be studied by administrators who are involved in
the installation and maintenance of the Kerberos service. The chapter discusses
several installation and configuration options that administrators must resolve
before they install or configure the service. </para>
<itemizedlist>
	<para>This is a list of the topics that a system administrator or other knowledgeable support staff should study:</para>
	<listitem><para><xref linkend="seamplan-2" /></para></listitem>
	<listitem><para><xref linkend="planning-8" /></para></listitem>
	<listitem><para><xref linkend="planning-1" /></para></listitem>
	<listitem><para><xref linkend="planning-25" /></para></listitem>
	<listitem><para><xref linkend="planning-2" /></para></listitem>
	<listitem><para><xref linkend="planning-3" /></para></listitem>
	<listitem><para><xref linkend="planning-5" /></para></listitem>
	<listitem><para><xref linkend="planning-26" /></para></listitem>
	<listitem><para><xref linkend="seamplan-41" /></para></listitem>
	<listitem><para><xref linkend="ggdya" /></para></listitem>
	<listitem><para><xref linkend="ehgay" /></para></listitem>
	<listitem><para><xref linkend="seamplan-3" /></para></listitem>
</itemizedlist>
<sect1 xml:id="seamplan-2">
<title>Why Plan for Kerberos Deployments?</title>
<para>Before you install the Kerberos service, you must resolve several configuration
issues. Although changing the configuration after the initial install is not
impossible, some changes can be difficult to implement. In addition, some
changes require that the KDC be rebuilt, so it is better to consider long-term
goals when you plan your Kerberos configuration.</para>
<para>Deploying a Kerberos infrastructure involves such tasks as installing
KDCs, creating keys for your hosts, and migrating users.  Reconfiguring a
Kerberos deployment can be as hard as performing an initial deployment, so
plan a deployment carefully to avoid having to re-configure.</para>
</sect1>
<sect1 xml:id="planning-8">
<title>Planning Kerberos Realms</title>
<indexterm><primary>realms (Kerberos)</primary><secondary>configuration decisions</secondary></indexterm>
<indexterm><primary>configuration decisions</primary><secondary>Kerberos</secondary><tertiary>realms</tertiary></indexterm>
<indexterm><primary>planning</primary><secondary>Kerberos</secondary><tertiary>realms</tertiary></indexterm>
<para>A <emphasis>realm</emphasis> is logical network, similar to a domain,
that defines a group of systems that are under the same master KDC. As with
establishing a DNS domain name, issues such as the realm name, the number
and size of each realm, and the relationship of a realm to other realms for
cross-realm authentication should be resolved before you configure the Kerberos
service.</para>
<sect2 xml:id="planning-27">
<title>Realm Names</title>
<indexterm><primary>realms (Kerberos)</primary><secondary>names</secondary></indexterm>
<indexterm><primary>configuration decisions</primary><secondary>Kerberos</secondary><tertiary>realm names</tertiary></indexterm>
<indexterm><primary>planning</primary><secondary>Kerberos</secondary><tertiary>realm names</tertiary></indexterm>
<para>Realm names can consist of any ASCII string. Usually, the realm name
is the same as your DNS domain name, except that the realm name is in uppercase.
This convention helps differentiate problems with the Kerberos service from
problems with the DNS namespace, while using a name that is familiar. If you
do not use DNS or you choose to use a different string, then you can use any
string. However, the configuration process requires more work. The use of
realm names that follow the standard Internet naming structure is wise.</para>
</sect2>
<sect2 xml:id="planning-28">
<title>Number of Realms</title>
<indexterm><primary>realms (Kerberos)</primary><secondary>number of</secondary></indexterm>
<indexterm><primary>configuration decisions</primary><secondary>Kerberos</secondary><tertiary>number of realms</tertiary></indexterm>
<indexterm><primary>planning</primary><secondary>Kerberos</secondary><tertiary>number of realms</tertiary></indexterm>
<itemizedlist>
	<para>The number of realms that your installation requires depends on several factors:</para>
	<listitem>
		<para>The number of clients to be supported. Too many clients in one realm makes
			administration more difficult and eventually requires that you split the
			realm. The primary factors that determine the number of clients
			that can be supported are as follows:</para>
		<itemizedlist>
			<listitem><para>The amount of Kerberos traffic that each client generates</para></listitem>
			<listitem><para>The bandwidth of the physical network</para></listitem>
			<listitem><para>The speed of the hosts</para></listitem>
		</itemizedlist>
		<para>Because each installation will have different limitations, no rule exists for determining the maximum number of clients.</para>
	</listitem>
	<listitem><para>How far apart the clients are. Setting up several small realms might make sense if the clients are in different geographic regions.</para></listitem>
	<listitem><para>The number of hosts that are available to be installed as KDCs. Each realm should have at least two KDC servers, one master server and one slave server.</para></listitem>
</itemizedlist>
<para>Alignment of Kerberos realms with administrative domains is recommended.
 Note that a Kerberos V realm can span multiple sub-domains of the DNS domain
to which the realm corresponds.</para>
</sect2>
<sect2 xml:id="planning-29">
<title>Realm Hierarchy</title>
<indexterm><primary>realms (Kerberos)</primary><secondary>hierarchy</secondary></indexterm>
<indexterm><primary>configuration decisions</primary><secondary>Kerberos</secondary><tertiary>realm hierarchy</tertiary></indexterm>
<indexterm><primary>planning</primary><secondary>Kerberos</secondary><tertiary>realm hierarchy</tertiary></indexterm>
<indexterm><primary>hierarchical realms</primary><secondary>in Kerberos</secondary></indexterm>
<para>When you are configuring multiple realms for cross-realm authentication,
you need to decide how to tie the realms together. You can establish a hierarchical
relationship among the realms, which provides automatic paths to the related
domains. Of course, all realms in the hierarchical chain must be configured
properly. The automatic paths can ease the administration burden. However,
if there are many levels of domains, you might not want to use the default
path because it requires too many transactions.</para>
<para>You can also choose to establish the trust relationship directly. A
direct trust relationship is most useful when too many levels exist between
two hierarchical realms or when no hierarchal relationship exists. The connection
must be defined in the <filename>/etc/krb5/krb5.conf</filename> file on all
hosts that use the connection. So, some additional work is required. The direct
trust relationship is also referred to as a transitive relationship. For an
introduction, see <xref linkend="intro-56" />. For
the configuration procedures for multiple realms, see <xref linkend="setup-87" />.</para>
</sect2>
</sect1><sect1 xml:id="planning-1"><title>Mapping Host Names Onto Realms</title><indexterm><primary>configuration decisions</primary><secondary>Kerberos</secondary><tertiary>mapping host names onto realms</tertiary>
</indexterm><indexterm><primary>realms (Kerberos)</primary><secondary>mapping host names onto</secondary>
</indexterm><indexterm><primary>mapping</primary><secondary>host names onto realms (Kerberos)</secondary>
</indexterm><indexterm><primary>host names</primary><secondary>mapping onto realms</secondary>
</indexterm><indexterm><primary><filename>krb5.conf</filename> file</primary><secondary><literal>domain_realm</literal> section</secondary>
</indexterm><indexterm><primary><literal>domain_realm</literal> section</primary><secondary><filename>krb5.conf</filename> file</secondary>
</indexterm><para>The mapping of host names onto realm names is defined in the <literal>domain_realm</literal> section of the <filename>krb5.conf</filename> file. These mappings
can be defined for a whole domain and for individual hosts, depending on the
requirements. </para><para>DNS can also be used to look up information about the KDCs. Using DNS
makes it easier to change the information because you will not need to edit
the <filename>krb5.conf</filename> file on all of the clients each time you
make a change. See the <citerefentry><refentrytitle>krb5.conf</refentrytitle><manvolnum>4</manvolnum></citerefentry> man
page for more information.</para><para>As of the Solaris Express Developer Edition 1/08 and the Solaris 10 5/08 releases, Solaris Kerberos clients
can interoperate better with Active Directory servers. The Active Directory
servers can be configured to provide the realm to host mapping.</para>
</sect1><sect1 xml:id="planning-25"><title>Client and Service Principal Names</title><indexterm><primary>configuration decisions</primary><secondary>Kerberos</secondary><tertiary>client and service principal names</tertiary>
</indexterm><indexterm><primary>planning</primary><secondary>Kerberos</secondary><tertiary>client and service principal names</tertiary>
</indexterm><indexterm><primary>service principal</primary><secondary>planning for names</secondary>
</indexterm><indexterm><primary>client names</primary><secondary>planning for in Kerberos</secondary>
</indexterm><indexterm><primary>DNS</primary><secondary>Kerberos and</secondary>
</indexterm><indexterm><primary>FQDN (Fully Qualified Domain Name)</primary><secondary>in Kerberos</secondary>
</indexterm><para>When you are using the Kerberos service, DNS must be enabled on all
hosts. With DNS, the principal should contain the Fully Qualified Domain Name
(FQDN) of each host. For example, if the host name is <literal>boston</literal>,
the DNS domain name is <literal>example.com</literal>, and the realm name
is <literal>EXAMPLE.COM</literal>, then the principal name for the host should
be <literal>host/boston.example.com@EXAMPLE.COM</literal>. The examples in
this book require that DNS is configured and use the FQDN for each host.</para><para>For the principal names that include the FQDN of a host, it is important
to match the string that describes the DNS domain name in the <filename>/etc/resolv.conf</filename> file. The Kerberos service requires that the DNS domain name be
in lowercase letters when you are specifying the FQDN for a principal. The
DNS domain name can include uppercase and lowercase letters, but only use
lowercase letters when you are creating a host principal. For example, it
doesn't matter if the DNS domain name is <literal>example.com</literal>, <literal>Example.COM</literal>, or any other variation. The principal name for the
host would still be <literal>host/boston.example.com@EXAMPLE.COM</literal>.</para><para>In addition, the Service Management Facility has been configured so
that many of the daemons or commands do not start if the DNS client service
is not running. The <command>kdb5_util</command>, <command>kadmind</command>,
and <command>kpropd</command> daemons, as well as the <command>kprop</command> command
all are configured to depend on the DNS service. To fully utilize the features
available using the Kerberos service and SMF, you must enable the DNS client
service on all hosts.</para>
</sect1><sect1 xml:id="planning-2"><title>Ports for the KDC and Admin Services</title><indexterm><primary>ports</primary><secondary>for Kerberos KDC</secondary>
</indexterm><indexterm><primary>planning</primary><secondary>Kerberos</secondary><tertiary>ports</tertiary>
</indexterm><indexterm><primary>configuration decisions</primary><secondary>Kerberos</secondary><tertiary>ports</tertiary>
</indexterm><indexterm><primary><filename>krb5.conf</filename> file</primary><secondary>ports definition</secondary>
</indexterm><indexterm><primary>KDC</primary><secondary>ports</secondary>
</indexterm><para>By default, port <literal>88</literal> and port <literal>750</literal> are
used for the KDC, and port <literal>749</literal> is used for the KDC administration
daemon. Different port numbers can be used. However, if you change the port
numbers, then the <filename>/etc/services</filename> and <filename>/etc/krb5/krb5.conf</filename> files must be changed on every client. In addition to these files,
the <filename>/etc/krb5/kdc.conf</filename> file on each KDC must be updated.</para>
</sect1><sect1 xml:id="planning-3"><title>The Number of Slave KDCs</title><indexterm><primary>KDC</primary><secondary>slave</secondary>
</indexterm><indexterm><primary>KDC</primary><secondary>planning</secondary>
</indexterm><indexterm><primary>slave KDCs</primary><secondary>planning for</secondary>
</indexterm><indexterm><primary>planning</primary><secondary>Kerberos</secondary><tertiary>slave KDCs</tertiary>
</indexterm><indexterm><primary>configuration decisions</primary><secondary>Kerberos</secondary><tertiary>slave KDCs</tertiary>
</indexterm><indexterm><primary>backup</primary><secondary>slave KDCs</secondary>
</indexterm><itemizedlist><para>Slave KDCs generate credentials for clients just as the master KDC does.
Slave KDCs provide backup if the master becomes unavailable. Each realm should
have at least one slave KDC. Additional slave KDCs might be required, depending
on these factors:</para><listitem><para>The number of physical segments in the realm. Normally, the
network should be set up so that each segment can function, at least minimally,
without the rest of the realm. To do so, a KDC must be accessible from each
segment. The KDC in this instance could be either a master or a slave.</para>
</listitem><listitem><para>The number of clients in the realm. By adding more slave KDC
servers, you can reduce the load on the current servers. </para>
</listitem>
</itemizedlist><para>It is possible to add too many slave KDCs. Remember that the KDC database
must be propagated to each server, so the more KDC servers that are installed,
the longer it can take to get the data updated throughout the realm. Also,
because each slave retains a copy of the KDC database, more slaves increase
the risk of a security breach.</para><para>In addition, one or more slave KDCs can easily be configured to be swapped
with the master KDC. The advantage of configuring at least one slave KDC in
this way is that if the master KDC fails for any reason, you will have a system
preconfigured that will be easy to swap as the master KDC. For instructions
on how to configure a swappable slave KDC, see <xref linkend="aadmin-2" />.</para>
</sect1>
<sect1 xml:id="ezlsz">
<title>Mapping GSS Credentials to UNIX Credentials</title>
<indexterm><primary>mapping GSS credentials</primary></indexterm>
<indexterm><primary>credentials</primary><secondary>mapping</secondary></indexterm>
<itemizedlist>
<para>The Kerberos service provides a default mapping of GSS credential names
to UNIX user IDs (UIDs) for GSS applications that require this mapping, such
as NFS. GSS credential names are equivalent to Kerberos principal names when
using the Kerberos service. The default mapping algorithm is to take a one
component Kerberos principal name and use that component, which is the primary
name of the principal, to look up the UID. The look up occurs in the default
realm or any realm that is allowed by using the <literal>auth_to_local_realm</literal> parameter
in <filename>/etc/krb5/krb5.conf</filename>. For example, the user principal
name <literal>bob@EXAMPLE.COM</literal> is mapped to the UID of the UNIX user
named <literal>bob</literal> using the password table. The user principal
name <literal>bob/admin@EXAMPLE.COM</literal> would not be mapped, because
the principal name includes an instance component of <literal>admin</literal>.
If the default mappings for the user credentials are sufficient, the GSS credential
table does not need to be populated. In past releases, populating the GSS
credential table was required to get the NFS service to work. If the default
mapping is not sufficient, for example if you want to map a principal name
which contains an instance component, then other methods should be used. For
more information see:</para>
<listitem><para><xref linkend="setup-133" /></para></listitem>
<listitem><para><xref linkend="setup-137" /></para></listitem>
<listitem><para><xref linkend="ezltf" /></para></listitem>
<listitem><para><xref linkend="fabaf" /></para></listitem>
</itemizedlist>
</sect1><sect1 xml:id="faawc"><title>Automatic User Migration to a Kerberos Realm</title><para>UNIX users who do not have valid user accounts in the default Kerberos
realm can be automatically migrated using the PAM framework. Specifically,
the <literal>pam_krb5_migrate</literal> module would be used in the authentication
stack of the PAM service. Services would be setup up so that whenever a user,
who does not have a Kerberos principal, performs a successful log in to a
system using their password, a Kerberos principal would be automatically created
for that user. The new principal password would be the same as the UNIX password.
See <xref linkend="faavx" /> for instructions on how to use the <literal>pam_krb5_migrate</literal> module.</para>
</sect1>
<sect1 xml:id="planning-5">
<title>Which Database Propagation System to Use</title>
<indexterm><primary>planning</primary><secondary>Kerberos</secondary><tertiary>database propagation</tertiary></indexterm>
<indexterm><primary>configuration decisions</primary><secondary>Kerberos</secondary><tertiary>database propagation</tertiary></indexterm>
<indexterm><primary>databases</primary><secondary>KDC propagation</secondary></indexterm>
<indexterm><primary>KDC</primary><secondary>database propagation</secondary></indexterm>
<indexterm><primary>propagation</primary><secondary>KDC database</secondary></indexterm>
<para>The database that is stored on the master KDC must be regularly propagated
to the slave KDCs. You can configure the propagation of the database to be
incremental. The incremental process propagates only updated information to
the slave KDCs, rather than the entire database.  For more information about
database propagation, see <xref linkend="aadmin-3" />.</para>
<para>If you do not use incremental propagation, one of the first issues to
resolve is how often to update the slave KDCs. The need to have up-to-date
information that is available to all clients must be weighed against the amount
of time it takes to complete the update.</para>
<para>In large installations with many KDCs in one realm, one or more slaves
can propagate the data so that the process is done in parallel. This strategy
reduces the amount of time that the update takes, but it also increases the
level of complexity in administering the realm. For a complete description
of this strategy, see <xref linkend="setup-313" />.</para>
</sect1><sect1 xml:id="planning-26"><title>Clock Synchronization Within a Realm</title><indexterm><primary>planning</primary><secondary>Kerberos</secondary><tertiary>clock synchronization</tertiary>
</indexterm><indexterm><primary>configuration decisions</primary><secondary>Kerberos</secondary><tertiary>clock synchronization</tertiary>
</indexterm><indexterm><primary>clock synchronizing</primary><secondary>Kerberos planning and</secondary>
</indexterm><indexterm><primary>clock skew</primary><secondary>Kerberos planning and</secondary>
</indexterm><indexterm><primary>NTP</primary><secondary>Kerberos planning and</secondary>
</indexterm><para>All hosts that participate in the Kerberos authentication system must
have their internal clocks synchronized within a specified maximum amount
of time. Known as <emphasis>clock skew</emphasis>, this feature provides another
Kerberos security check. If the clock skew is exceeded between any of the
participating hosts, requests are rejected. </para><para>One way to synchronize all the clocks is to use the Network Time Protocol
(NTP) software. See <xref linkend="setup-192" /> for more information. Other ways of synchronizing
the clocks are available, so the use of NTP is not required. However, some
form of synchronization should be used to prevent access failures because
of clock skew.</para>
</sect1><sect1 xml:id="seamplan-41"><title>Client Configuration Options</title><indexterm><primary>configuration decisions</primary><secondary>Kerberos</secondary><tertiary>clients</tertiary>
</indexterm><para>A new feature in the Solaris 10 release is the <command>kclient</command> configuration
utility. The utility can be run in interactive mode or noninteractive mode.
In interactive mode, the user is prompted for Kerberos-specific parameter
values, which allows the user to make changes to the existing installation
when configuring the client. In noninteractive mode, a file with previously
set parameter values is used. Also, command-line options can be used in the
noninteractive mode. Both interactive and noninteractive modes require less
steps than the manual process, which should make the process quicker and less
prone to error.</para><itemizedlist><para>In the Solaris Express Developer Edition 1/08 release,
changes were made to allow for a zero-configuration Kerberos client. If these
rules are followed in your environment then no explicit configuration procedure
is necessary for a Solaris Kerberos client:</para><listitem><para>DNS is configured to return SRV records for KDCs.</para>
</listitem><listitem><para>The realm name matches the DNS domain name or the KDC supports
referrals.</para>
</listitem><listitem><para>The Kerberos client does not require a <filename>keytab</filename>.</para>
</listitem>
</itemizedlist><itemizedlist><para>In some cases it may be better to explicitly configure the Kerberos
client:</para><listitem><para>If referrals are not used, the zero-configuration logic depends
on the DNS domain name of the host to determine the realm. This introduces
a small security risk, but the risk is much smaller than enabling <literal>dns_lookup_realm</literal>.</para>
</listitem><listitem><para>The <filename>pam_krb5</filename> module relies on a host
key entry in the <filename>keytab</filename>. This requirement may be disabled
in the <filename>krb5.conf</filename> file however it is not recommend for
security reasons. See the <citerefentry><refentrytitle>krb5.conf</refentrytitle><manvolnum>4</manvolnum></citerefentry> man
page.</para>
</listitem><listitem><para>The zero-configuration process is less efficient than direct
configuration, and has a greater reliance on DNS. The process performs more
DNS lookups than a directly configured client.</para>
</listitem>
</itemizedlist><para>See <xref linkend="setup-148" /> for
a description of all the client configuration processes.</para>
</sect1><sect1 xml:id="ggdya"><title>KDC Configuration Options</title><indexterm><primary>configuration decisions</primary><secondary>Kerberos</secondary><tertiary>KDC server</tertiary>
</indexterm><para>Starting in the Solaris 10 5/08 and the Solaris Express Developer Edition 1/08 releases, there are several
ways to configure a KDC. The simplest versions use the <command>kdcmgr</command> utility
to configure the KDC automatically or interactively. The automatic version
requires that you use command line options to define the configuration parameters.
This method is especially useful for scripts. The interactive version prompts
you for all information that is needed. See <xref linkend="ggdxl" /> for pointers to the instructions for using this command.</para><para>In addition, starting in the Solaris 10 5/08 and Solaris Express Developer Edition 1/08 releases, support
for using LDAP to manage the database files for Kerberos has been added. See <xref linkend="ggdqi" /> for
instructions. Using LDAP simplifies administration for sites that require
better coordination between the Solaris Kerberos databases and their existing
DS setup.</para>
</sect1><sect1 xml:id="ehgay"><title>Kerberos Encryption Types</title><indexterm><primary>configuration decisions</primary><secondary>Kerberos</secondary><tertiary>encryption types</tertiary>
</indexterm><indexterm><primary>Kerberos</primary><secondary>encryption types</secondary><tertiary>overview</tertiary>
</indexterm><indexterm><primary>encryption </primary><secondary>types</secondary><tertiary>Kerberos and</tertiary>
</indexterm><indexterm><primary>encryption </primary><secondary>modes</secondary><tertiary>Kerberos and</tertiary>
</indexterm><indexterm><primary>encryption </primary><secondary>algorithms</secondary><tertiary>Kerberos and</tertiary>
</indexterm><indexterm><primary>hash</primary><secondary>algorithms</secondary><tertiary>Kerberos and</tertiary>
</indexterm><itemizedlist><para>An <emphasis>encryption type</emphasis> is an identifier that specifies
the encryption algorithm, encryption mode, and hash algorithms used in the
Kerberos service. The keys in the Kerberos service have an associated encryption
type to identify the cryptographic algorithm and mode to be used when the
service performs cryptographic operations with the key. Here are the supported
encryption types:</para><listitem><para><literal>des-cbc-md5</literal></para>
</listitem><listitem><para><literal>des-cbc-crc</literal></para>
</listitem><listitem><para><literal>des3-cbc-sha1-kd</literal></para>
</listitem><listitem><para><literal>arcfour-hmac-md5</literal></para>
</listitem><listitem><para><literal>arcfour-hmac-md5-exp</literal></para>
</listitem><listitem><para><literal>aes128-cts-hmac-sha1-96</literal></para>
</listitem><listitem><para><literal>aes256-cts-hmac-sha1-96</literal></para>
</listitem>
</itemizedlist><note><para>In releases prior to Solaris 10 8/07 release, the <literal>aes256-cts-hmac-sha1-96</literal> encryption type can be used with the Kerberos service if the unbundled
Strong Cryptographic packages are  installed.</para>
</note><para>If you want to change the encryption type, you should do so when creating
a new principal database. Because of the interaction between the KDC, the
server, and the client, changing the encryption type on an existing database
is difficult. Leave these parameters unset unless you are re-creating the
database. Refer to <xref linkend="egric" /> for
more information.</para><note><para>If you have a master KDC installed that is not running the Solaris
10 release, the slave KDCs must be upgraded to the Solaris 10 release before
you upgrade the master KDC. A Solaris 10 master KDC will use the new encryption
types, which an older slave will not be able to handle.</para>
</note>
</sect1>
<sect1 xml:id="seamplan-3">
<title>Online Help URL in the Graphical Kerberos Administration Tool</title>
<indexterm><primary>help</primary><secondary>URL for online</secondary></indexterm>
<indexterm><primary>online help</primary><secondary>URL for</secondary></indexterm>
<indexterm><primary>URL for online help</primary><secondary>Graphical Kerberos Tool</secondary></indexterm>
<indexterm><primary>Kerberos</primary><secondary>online help</secondary></indexterm>
<para>The online help URL is used by the Graphical Kerberos Administration
Tool, <command>gkadmin</command>, so the URL should be defined properly to
enable the &ldquo;Help Contents&ldquo; menu to work. The HTML version of this
manual can be installed on any appropriate server. Alternately, you can decide
to use the collections at <link xl:href="http://docs.sun.com">http://docs.sun.com</link>.</para>
<para>The URL is specified in the krb5.conf file when configuring a host to
use the Kerberos service. The URL should point to the section titled &ldquo;Graphical
Kerberos Administration Tool&rdquo; in the &ldquo;Administering Principals
and Policies (Tasks)&rdquo; chapter in this book. You can choose another HTML
page, if another location is more appropriate.</para>
</sect1>
</chapter>
